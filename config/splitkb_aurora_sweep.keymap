/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_lalt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <16 17>;
        };

        combo_ralt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <18 19>;
        };

        combo_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W        &kp E            &kp R            &kp T         &kp Y         &kp U                 &kp I         &kp O      &kp P
&kp A             &kp S        &kp D            &kp F            &kp G         &kp H         &kp J                 &kp K         &kp L      &kp APOSTROPHE
&mt LEFT_SHIFT Z  &kp X        &kp C            &kp V            &kp B         &kp N         &kp M                 &kp COMMA     &kp DOT    &mt LEFT_SHIFT RET
&mo 1             &kp LCTRL                                                                                                      &kp SPACE  &mo 2
            >;
        };

        left_layer {
            bindings = <
&kp N1           &kp N2        &kp N3           &kp N4           &kp N5                      &kp N6        &kp N7                &kp N8        &kp N9     &kp N0
&kp GRAVE        &CAPS         &none            &kp BSLH         &kp MINUS                   &kp EQUAL     &kp LEFT              &kp DOWN      &kp UP     &kp RIGHT
&kp LEFT_SHIFT   &none         &none            &none            &none                       &kp SEMI      &kp SLASH             &kp LBKT      &kp RBKT   &kp RIGHT_SHIFT
&mo 1            &none                                                                                                           &kp RGUI   &mo 2
            >;
        };

        right_layer {
            bindings = <
&kp EXCLAMATION  &kp AT        &kp HASH         &kp DLLR         &kp PERCENT                 &kp CARET     &kp AMPS              &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp TILDE        &kp CAPS      &none            &kp PIPE         &kp UNDER                   &kp PLUS      &kp LEFT              &kp DOWN      &kp UP                &kp RIGHT
&kp LEFT_SHIFT   &kp KPLS      &none            &none            &none                       &kp COLON     &kp QMARK             &kp LBRC      &kp RBRC              &kp RIGHT_SHIFT
&mo 3     &kp LGUI                                                                                                                           &none     &mo 2
            >;
        };

        tri_layer {
            bindings = <
&kp NUM_1   &kp NUM_2   &kp NUM_3   &kp NUM_4  &kp NUM_5    &trans  &trans     &trans        &trans      &trans
&kp F1      &kp F2      &kp F3      &kp F4     &kp F5       &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &kp F6     &kp F7       &trans  &kp PG_DN  &kp K_VOL_DN  &trans      &trans
&trans      &trans                                                                           &trans      &trans
            >;
        };
    };
};